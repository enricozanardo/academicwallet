set(AM_SOURCES "/cryptonotewallet/cryptonote/src/Common/Base58.cpp;/cryptonotewallet/cryptonote/src/Common/CommandLine.cpp;/cryptonotewallet/cryptonote/src/Common/Util.cpp;/cryptonotewallet/cryptonote/src/Common/StringTools.cpp;/cryptonotewallet/cryptonote/src/Common/JsonValue.cpp;/cryptonotewallet/cryptonote/src/Common/ConsoleTools.cpp;/cryptonotewallet/cryptonote/src/Common/MemoryInputStream.cpp;/cryptonotewallet/cryptonote/src/Common/PathTools.cpp;/cryptonotewallet/cryptonote/src/Common/StdInputStream.cpp;/cryptonotewallet/cryptonote/src/Common/StdOutputStream.cpp;/cryptonotewallet/cryptonote/src/Common/StreamTools.cpp;/cryptonotewallet/cryptonote/src/Common/StringOutputStream.cpp;/cryptonotewallet/cryptonote/src/Common/StringView.cpp;/cryptonotewallet/cryptonote/src/Common/VectorOutputStream.cpp;/cryptonotewallet/cryptonote/src/crypto/crypto.cpp;/cryptonotewallet/cryptonote/src/crypto/slow-hash.cpp;/cryptonotewallet/cryptonote/src/CryptoNoteCore/BlockchainIndices.cpp;/cryptonotewallet/cryptonote/src/CryptoNoteCore/BlockchainMessages.cpp;/cryptonotewallet/cryptonote/src/CryptoNoteCore/BlockIndex.cpp;/cryptonotewallet/cryptonote/src/CryptoNoteCore/CoreConfig.cpp;/cryptonotewallet/cryptonote/src/CryptoNoteCore/CryptoNoteBasic.cpp;/cryptonotewallet/cryptonote/src/CryptoNoteCore/CryptoNoteTools.cpp;/cryptonotewallet/cryptonote/src/CryptoNoteCore/Currency.cpp;/cryptonotewallet/cryptonote/src/CryptoNoteCore/MinerConfig.cpp;/cryptonotewallet/cryptonote/src/CryptoNoteCore/Transaction.cpp;/cryptonotewallet/cryptonote/src/CryptoNoteCore/Account.cpp;/cryptonotewallet/cryptonote/src/CryptoNoteCore/Blockchain.cpp;/cryptonotewallet/cryptonote/src/CryptoNoteCore/Checkpoints.cpp;/cryptonotewallet/cryptonote/src/CryptoNoteCore/CryptoNoteBasicImpl.cpp;/cryptonotewallet/cryptonote/src/CryptoNoteCore/Core.cpp;/cryptonotewallet/cryptonote/src/CryptoNoteCore/CryptoNoteFormatUtils.cpp;/cryptonotewallet/cryptonote/src/CryptoNoteCore/CryptoNoteSerialization.cpp;/cryptonotewallet/cryptonote/src/CryptoNoteCore/Difficulty.cpp;/cryptonotewallet/cryptonote/src/CryptoNoteCore/IBlock.cpp;/cryptonotewallet/cryptonote/src/CryptoNoteCore/Miner.cpp;/cryptonotewallet/cryptonote/src/CryptoNoteCore/TransactionExtra.cpp;/cryptonotewallet/cryptonote/src/CryptoNoteCore/TransactionPool.cpp;/cryptonotewallet/cryptonote/src/CryptoNoteCore/TransactionPrefixImpl.cpp;/cryptonotewallet/cryptonote/src/CryptoNoteCore/TransactionUtils.cpp;/cryptonotewallet/cryptonote/src/InProcessNode/InProcessNode.cpp;/cryptonotewallet/cryptonote/src/InProcessNode/InProcessNodeErrors.cpp;/cryptonotewallet/cryptonote/src/NodeRpcProxy/NodeErrors.cpp;/cryptonotewallet/cryptonote/src/NodeRpcProxy/NodeRpcProxy.cpp;/cryptonotewallet/cryptonote/src/P2p/NetNodeConfig.cpp;/cryptonotewallet/cryptonote/src/Serialization/BinaryInputStreamSerializer.cpp;/cryptonotewallet/cryptonote/src/Serialization/BinaryOutputStreamSerializer.cpp;/cryptonotewallet/cryptonote/src/Serialization/JsonInputValueSerializer.cpp;/cryptonotewallet/cryptonote/src/Serialization/JsonOutputStreamSerializer.cpp;/cryptonotewallet/cryptonote/src/Serialization/KVBinaryInputStreamSerializer.cpp;/cryptonotewallet/cryptonote/src/Serialization/KVBinaryOutputStreamSerializer.cpp;/cryptonotewallet/cryptonote/src/Serialization/SerializationOverloads.cpp;/cryptonotewallet/cryptonote/src/Transfers/BlockchainSynchronizer.cpp;/cryptonotewallet/cryptonote/src/Transfers/SynchronizationState.cpp;/cryptonotewallet/cryptonote/src/Transfers/TransfersConsumer.cpp;/cryptonotewallet/cryptonote/src/Transfers/TransfersContainer.cpp;/cryptonotewallet/cryptonote/src/Transfers/TransfersSubscription.cpp;/cryptonotewallet/cryptonote/src/Transfers/TransfersSynchronizer.cpp;/cryptonotewallet/cryptonote/src/Wallet/LegacyKeysImporter.cpp;/cryptonotewallet/cryptonote/src/Wallet/WalletAsyncContextCounter.cpp;/cryptonotewallet/cryptonote/src/Wallet/WalletErrors.cpp;/cryptonotewallet/cryptonote/src/WalletLegacy/KeysStorage.cpp;/cryptonotewallet/cryptonote/src/WalletLegacy/WalletLegacy.cpp;/cryptonotewallet/cryptonote/src/WalletLegacy/WalletHelper.cpp;/cryptonotewallet/cryptonote/src/WalletLegacy/WalletLegacySerializer.cpp;/cryptonotewallet/cryptonote/src/WalletLegacy/WalletLegacySerialization.cpp;/cryptonotewallet/cryptonote/src/WalletLegacy/WalletTransactionSender.cpp;/cryptonotewallet/cryptonote/src/WalletLegacy/WalletUnconfirmedTransactions.cpp;/cryptonotewallet/cryptonote/src/WalletLegacy/WalletUserTransactionsCache.cpp;/cryptonotewallet/cryptonote/src/System/ContextGroup.cpp;/cryptonotewallet/cryptonote/src/System/Event.cpp;/cryptonotewallet/cryptonote/src/System/EventLock.cpp;/cryptonotewallet/cryptonote/src/System/InterruptedException.cpp;/cryptonotewallet/cryptonote/src/System/Ipv4Address.cpp;/cryptonotewallet/cryptonote/src/System/TcpStream.cpp;/cryptonotewallet/cryptonote/src/HTTP/HttpRequest.cpp;/cryptonotewallet/cryptonote/src/HTTP/HttpParser.cpp;/cryptonotewallet/cryptonote/src/HTTP/HttpParserErrorCodes.cpp;/cryptonotewallet/cryptonote/src/HTTP/HttpResponse.cpp;/cryptonotewallet/cryptonote/src/Rpc/HttpClient.cpp;/cryptonotewallet/cryptonote/src/Rpc/JsonRpc.cpp;/cryptonotewallet/cryptonote/src/P2p/NetNode.cpp;/cryptonotewallet/cryptonote/src/P2p/LevinProtocol.cpp;/cryptonotewallet/cryptonote/src/P2p/PeerListManager.cpp;/cryptonotewallet/cryptonote/src/CryptoNoteProtocol/CryptoNoteProtocolHandler.cpp;/cryptonotewallet/cryptonote/src/Logging/ILogger.cpp;/cryptonotewallet/cryptonote/src/Logging/LoggerGroup.cpp;/cryptonotewallet/cryptonote/src/Logging/CommonLogger.cpp;/cryptonotewallet/cryptonote/src/Logging/LoggerManager.cpp;/cryptonotewallet/cryptonote/src/Logging/FileLogger.cpp;/cryptonotewallet/cryptonote/src/Logging/StreamLogger.cpp;/cryptonotewallet/cryptonote/src/Logging/ConsoleLogger.cpp;/cryptonotewallet/cryptonote/src/Logging/LoggerMessage.cpp;/cryptonotewallet/cryptonote/src/Logging/LoggerRef.cpp;/cryptonotewallet/cryptonote/src/BlockchainExplorer/BlockchainExplorer.cpp;/cryptonotewallet/cryptonote/src/BlockchainExplorer/BlockchainExplorerDataBuilder.cpp;/cryptonotewallet/cryptonote/src/BlockchainExplorer/BlockchainExplorerErrors.cpp;/cryptonotewallet/cryptonote/src/Platform/Linux/System/TcpConnection.cpp;/cryptonotewallet/cryptonote/src/Platform/Linux/System/TcpConnector.cpp;/cryptonotewallet/cryptonote/src/Platform/Linux/System/Timer.cpp;/cryptonotewallet/cryptonote/src/Platform/Linux/System/ErrorMessage.cpp;/cryptonotewallet/cryptonote/src/Platform/Linux/System/Ipv4Resolver.cpp;/cryptonotewallet/cryptonote/src/Platform/Linux/System/TcpListener.cpp;/cryptonotewallet/cryptonote/src/Platform/Linux/System/Dispatcher.cpp" )
set(AM_HEADERS "/cryptonotewallet/cryptonote/src/Platform/Linux/System/Timer.h;/cryptonotewallet/cryptonote/src/Platform/Linux/System/Future.h;/cryptonotewallet/cryptonote/src/Platform/Linux/System/Ipv4Resolver.h;/cryptonotewallet/cryptonote/src/Platform/Linux/System/TcpConnection.h;/cryptonotewallet/cryptonote/src/Platform/Linux/System/TcpListener.h;/cryptonotewallet/cryptonote/src/Platform/Linux/System/Dispatcher.h;/cryptonotewallet/cryptonote/src/Platform/Linux/System/ErrorMessage.h;/cryptonotewallet/cryptonote/src/Platform/Linux/System/TcpConnector.h" )
set(AM_MOC_COMPILE_DEFINITIONS "GIT_REVISION=\"5e0d1b2\";_GNU_SOURCE")
set(AM_MOC_INCLUDES "/cryptonotewallet/build;/cryptonotewallet/src;/cryptonotewallet/cryptonote/external;/cryptonotewallet/cryptonote/include;/cryptonotewallet/cryptonote/src;/cryptonotewallet/cryptonote/src/Platform/Linux;/usr/include")
set(AM_MOC_OPTIONS "")
set(AM_CMAKE_INCLUDE_DIRECTORIES_PROJECT_BEFORE "")
set(AM_CMAKE_BINARY_DIR "/cryptonotewallet/build/")
set(AM_CMAKE_SOURCE_DIR "/cryptonotewallet/")
set(AM_QT_MOC_EXECUTABLE "/usr/lib/x86_64-linux-gnu/qt5/bin/moc")
if(DEFINED ENV{DEB_BUILD_MULTIARCH} AND DEFINED ENV{DEB_HOST_MULTIARCH} AND "/usr/lib/x86_64-linux-gnu/qt5/bin/moc" MATCHES "/usr/lib/$ENV{DEB_HOST_MULTIARCH}/qt5/bin/moc")
  set(AM_QT_MOC_EXECUTABLE "/usr/lib/$ENV{DEB_BUILD_MULTIARCH}/qt5/bin/moc")
endif()
set(AM_CMAKE_CURRENT_SOURCE_DIR "/cryptonotewallet/")
set(AM_CMAKE_CURRENT_BINARY_DIR "/cryptonotewallet/build/")
set(AM_QT_VERSION_MAJOR "5")
set(AM_TARGET_NAME "cryptonote_automoc")
set(AM_RELAXED_MODE "FALSE")
